Index: config.def.h
--- config.def.h.orig
+++ config.def.h
@@ -1,17 +1,17 @@
 /* See LICENSE file for copyright and license details. */

 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char *fonts[]          = { "Victor Mono:size=14" };
+static const char dmenufont[]       = "Victor Mono:size=14";
+static const char col_gray1[]       = "#282828";
+static const char col_gray2[]       = "#1d2021";
+static const char col_gray3[]       = "#ebdbb2";
+static const char col_gray4[]       = "#282828";
+static const char col_cyan[]        = "#fabd2f";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
@@ -26,15 +26,14 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class              instance    title       tags mask     isfloating   monitor */
+	{ "firefox-default",  NULL,       NULL,       1 << 8,       0,           -1 },
 };

 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact     = 0.50; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen window */

 static const Layout layouts[] = {
@@ -45,7 +44,7 @@ static const Layout layouts[] = {
 };

 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -58,7 +57,15 @@ static const Layout layouts[] = {
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *termcmd[]  = { "xterm", "-e", "tmux", "new-session", "-A", "-s", "based", NULL };
+static const char *brightnessdowncmd[]  = { "xbacklight", "-dec", "10%", NULL };
+static const char *brightnessupcmd[]  = { "xbacklight", "-inc", "10%", NULL };
+static const char *volumedowncmd[]  = { "sndioctl", "output.level=-0.1", NULL };
+static const char *volumeupcmd[]  = { "sndioctl", "output.level=+0.1", NULL };
+static const char *volumemutecmd[]  = { "sndioctl", "output.mute=!", NULL };
+static const char *micvolumedowncmd[]  = { "sndioctl", "input.level=-0.1", NULL };
+static const char *micvolumeupcmd[]  = { "sndioctl", "input.level=+0.1", NULL };
+static const char *micvolumemutecmd[]  = { "sndioctl", "input.mute=!", NULL };

 static Key keys[] = {
 	/* modifier                     key        function        argument */
@@ -85,6 +92,14 @@ static Key keys[] = {
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY,                       XK_equal,  spawn,          {.v = brightnessdowncmd } },
+	{ MODKEY|ShiftMask,             XK_equal,  spawn,          {.v = brightnessupcmd } },
+	{ MODKEY,                       XK_Up,     spawn,          {.v = volumeupcmd } },
+	{ MODKEY,                       XK_Down,   spawn,          {.v = volumedowncmd } },
+	{ MODKEY,                       XK_minus,  spawn,          {.v = volumemutecmd } },
+	{ MODKEY|ShiftMask,             XK_Up,     spawn,          {.v = micvolumeupcmd } },
+	{ MODKEY|ShiftMask,             XK_Down,   spawn,          {.v = micvolumedowncmd } },
+	{ MODKEY|ShiftMask,             XK_minus,  spawn,          {.v = micvolumemutecmd } },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
